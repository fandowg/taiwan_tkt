@mixin button-variant($color) {
  background-color: $color;
  color: $white;
  &:hover,
  &.hover {
    background-color: lighten($color, 5%);
    border-color: lighten($color, 5%);
    // opacity: 0.9;  
  }
  &:focus,
  &.focus {
  
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    
    background-color: lighten($color, 5%);
    border-color: lighten($color, 5%);  
   
  }
  &:not(:disabled):not(.disabled) {
    cursor:pointer;
    &:active,
    &.active {
      color: $white;
      background-color: lighten($color, 5%);
      border-color: lighten($color, 5%);
   
      &:focus {
     
      }
    }
  }
}
@mixin button-outline-variant($color) {
  color: $color;
  border-color: $color;
  &:hover,
  &.hover {
    color: $white;
    background-color: $color;
    border-color: $color; 
  }
  &:focus,
  &.focus { 
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }
  &:not(:disabled):not(.disabled) {
   
    &:active,
    &.active {
      color: $white;
      background-color: $color;
      border-color: $color;  
      &:focus {   
      
      }
    }
  }
}

.btn {
  display: inline-block;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  color: $white;
  text-align: center;
  padding: $btn-padding-y $btn-padding-x;
  border-radius:$btn-border-radius;
  text-decoration: none;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent; 
  @include transition;
  @include max(md) {
    font-size: $font-size-base !important;
  }
  //客製化樣式
  // @include skewX;

  &:hover,
  &.hover {
    color: $white;
    text-decoration: none;
    // opacity: 0.9;
  }
  &:focus,
  &.focus {
    outline: 0;
    box-shadow: none;
    text-decoration: none;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $white;
    opacity: $btn-disabled-opacity;
    pointer-events: none;

  }
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
    &:active,
    &.active {
      

      &:focus {
        box-shadow: none;
      }
    }
  }
}

.btn-lg{
  font-size: $btn-font-size-lg; 
  padding: $btn-padding-y-lg $btn-padding-x-lg;
  border-radius:$btn-border-radius-lg;
}

.btn-sm{
  font-size: $btn-font-size-sm; 
  padding: $btn-padding-y-sm $btn-padding-x-sm;
  border-radius:$btn-border-radius-sm;
}

// Future-proof disabling of clicks on `<a>` elements
// a.btn.disabled,
// fieldset:disabled a.btn {
//   pointer-events: none;
// }
//
// Alternate buttons
//

@each $color,$value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
  }
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: bolder;
  color: $link-color;
  text-decoration: $link-decoration;
  @include transition;
  &:hover,
  &.hover {
    color: $link-hover-color;
    // text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus { 
    text-decoration: $link-hover-decoration;
  }
  &:active,
  &.active {
    // color: $link-color;
  }
  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}

//客製化

.btn-sm {
  font-size: $btn-font-size-sm;
  padding: 0.6rem 0.8rem;
}

.btn-secondary {
  &:hover {

    color: #fff;
  }
}
.btn-full {
  width: 100%;
  border-radius: 0;
}
.btn-outline-info {
  @include border;
  cursor: none;
  pointer-events: none;

  background-color: $gray-100;
  color: $info;
  &:hover,
  &.hover {
    color: $info;
  }
}